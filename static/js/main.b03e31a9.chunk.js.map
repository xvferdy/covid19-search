{"version":3,"sources":["CountryStats2.js","BreakingNews.js","CovidApp2.js","App.js","reportWebVitals.js","index.js"],"names":["CountryStats2","searchCountry","countryStats","countrySummary","filter","country","Country","toLocaleLowerCase","includes","style","marginTop","console","log","length","height","TotalConfirmed","TotalRecovered","TotalDeaths","BreakingNews","class","CovidApp2","useState","allcountry","setAllcountry","setCountrySummary","setSearchCountry","useEffect","getCountry","a","axios","get","res","data","map","getCountrySummary","Countries","catch","err","alert","getData","allcountryArr","sort","Paper","textAlign","backgroundImage","backgroundRepeat","backgroundSize","elevation","square","id","i","value","width","fontSize","placeholder","type","list","autoFocus","onChange","e","target","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAEe,SAASA,EAAT,GAA2D,IAAlCC,EAAiC,EAAjCA,cAClCC,EADmE,EAAlBC,eACnBC,QAAO,SAACC,GACxC,MAAsB,KAAlBJ,EACKI,EAAQC,QAAQC,oBAAoBC,SACzCP,EAAcM,qBAGTF,KAIX,OACE,sBAAKI,MAAO,CAAEC,UAAW,QAAzB,UACGC,QAAQC,IAAIV,GAWZD,EACyB,IAAxBC,EAAaW,OACX,sBAAKJ,MAAO,CAAEK,OAAQ,SAAtB,UACE,6BAAKZ,EAAa,GAAGI,UACrB,6CAAgBJ,EAAa,GAAGa,kBAChC,6CAAgBb,EAAa,GAAGc,kBAChC,0CAAad,EAAa,GAAGe,kBAG/B,oBAAIR,MAAO,CAAEK,OAAQ,SAArB,sBAGF,oBAAIL,MAAO,CAAEK,OAAQ,SAArB,+B,MCnCO,SAASI,IACtB,OACE,qBAAKC,MAAM,cAAX,SACE,+BACE,kEACA,oEACA,+EACA,wGCFO,SAASC,IAAa,IAAD,EACEC,mBAAS,IADX,mBAC3BC,EAD2B,KACfC,EADe,OAEUF,mBAAS,IAFnB,mBAE3BlB,EAF2B,KAEXqB,EAFW,OAGQH,mBAAS,IAHjB,mBAG3BpB,EAH2B,KAGZwB,EAHY,KAKlCC,qBAAU,YACQ,WACd,IAAMC,EAAU,uCAAG,4BAAAC,EAAA,sEACDC,IAAMC,IAAI,wCADT,OACbC,EADa,OAGjBR,EAAcQ,EAAIC,KAAKC,KAAI,SAAC5B,GAAD,OAAaA,MAHvB,2CAAH,qDAOV6B,EAAiB,uCAAG,4BAAAN,EAAA,sEACRC,IAAMC,IAAI,sCADF,OACpBC,EADoB,OAExBP,EAAkBO,EAAIC,KAAKG,WAFH,2CAAH,qDAKvBR,IACAO,IAAoBE,OAAM,SAACC,GACzBC,MAAM,4DACN3B,QAAQC,IAAIyB,MAGhBE,KACC,IAGH,IAAIC,EAAgBlB,EAAWW,KAAI,SAAC5B,GAAD,OAAaA,EAAQC,WAASmC,OACjE,OACE,eAACC,EAAA,EAAD,CACEjC,MAAO,CACLkC,UAAW,SACX7B,OAAQ,QACR8B,gBAAiB,eACjBC,iBAAkB,YAClBC,eAAgB,SAElBC,UAAW,EAEXC,QAAM,EAVR,UAYE,cAAC,EAAD,IACA,cAAChD,EAAD,CACEC,cAAeA,EACfE,eAAgBA,IAGlB,0BAAU8C,GAAG,SAAb,SACGT,EAAcP,KAAI,SAAC5B,EAAS6C,GAAV,OACjB,wBAAgBC,MAAO9C,GAAV6C,QAIjB,qBAAKzC,MAAO,CAAEC,UAAW,QAAzB,SACE,uBACED,MAAO,CACLK,OAAQ,OACRsC,MAAO,QACPC,SAAU,QAEZC,YAAY,YACZC,KAAK,SACLC,KAAK,SACLC,WAAS,EACTC,SAAU,SAACC,GACTlC,EAAiBkC,EAAEC,OAAOT,eC9DvBU,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC1C,EAAD,OCIS2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b03e31a9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function CountryStats2({ searchCountry, countrySummary }) {\r\n  let countryStats = countrySummary.filter((country) => {\r\n    if (searchCountry !== \"\") {\r\n      return country.Country.toLocaleLowerCase().includes(\r\n        searchCountry.toLocaleLowerCase()\r\n      );\r\n    } else {\r\n      return country;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div style={{ marginTop: \"25px\" }}>\r\n      {console.log(countryStats)}\r\n\r\n      {/* {countryStats.length !== 0 ? (\r\n        <>\r\n          <h1>{countryStats[0].Country}</h1>\r\n          <h3>{countryStats[0].TotalConfirmed}</h3>\r\n        </>\r\n      ) : (\r\n        <h1>NO Data!</h1>\r\n      )} */}\r\n\r\n      {searchCountry ? (\r\n        countryStats.length !== 0 ? (\r\n          <div style={{ height: \"170px\" }}>\r\n            <h1>{countryStats[0].Country}</h1>\r\n            <h3>Confirmed: {countryStats[0].TotalConfirmed}</h3>\r\n            <h3>Recovered: {countryStats[0].TotalRecovered}</h3>\r\n            <h3>Deaths: {countryStats[0].TotalDeaths}</h3>\r\n          </div>\r\n        ) : (\r\n          <h1 style={{ height: \"170px\" }}>NO Data!</h1>\r\n        )\r\n      ) : (\r\n        <h2 style={{ height: \"170px\" }}>Select Country</h2>\r\n      )}\r\n\r\n      {/* <h1 style={{ height: \"100px\", backgroundColor: \"red\" }}>\r\n        {searchCountry}\r\n      </h1> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./BreakingNews.css\";\r\n\r\nexport default function BreakingNews() {\r\n  return (\r\n    <div class=\"ticker redi\">\r\n      <ul>\r\n        <li>Jaga Jarak ✔️ &nbsp;&nbsp;</li>\r\n        <li>Pakai Masker ☢️ &nbsp;&nbsp;</li>\r\n        <li>Cuci Tangan Pakai sabun ✌️ &nbsp;&nbsp;</li>\r\n        <li>Usahakan Jangan Terlalu Sering Keluar Rumah ❤️ &nbsp;&nbsp;</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport CountryStats2 from \"./CountryStats2\";\r\nimport BreakingNews from \"./BreakingNews\";\r\n\r\nexport default function CovidApp2() {\r\n  const [allcountry, setAllcountry] = useState([]);\r\n  const [countrySummary, setCountrySummary] = useState([]);\r\n  const [searchCountry, setSearchCountry] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getData = () => {\r\n      const getCountry = async () => {\r\n        let res = await axios.get(\"https://api.covid19api.com/countries\");\r\n        //Country & Slug (array with object)\r\n        setAllcountry(res.data.map((country) => country));\r\n      };\r\n\r\n      // country with covid\r\n      const getCountrySummary = async () => {\r\n        let res = await axios.get(\"https://api.covid19api.com/summary\");\r\n        setCountrySummary(res.data.Countries);\r\n      };\r\n\r\n      getCountry();\r\n      getCountrySummary().catch((err) => {\r\n        alert(\"https://api.covid19api.com/summary ~Sedang ada gangguan~\");\r\n        console.log(err);\r\n      });\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  //sorted array only country\r\n  let allcountryArr = allcountry.map((country) => country.Country).sort();\r\n  return (\r\n    <Paper\r\n      style={{\r\n        textAlign: \"center\",\r\n        height: \"100vh\",\r\n        backgroundImage: \"url(bg2.jpg)\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"cover\",\r\n      }}\r\n      elevation={0}\r\n      // variant=\"outlined\"\r\n      square\r\n    >\r\n      <BreakingNews />\r\n      <CountryStats2\r\n        searchCountry={searchCountry}\r\n        countrySummary={countrySummary}\r\n      />\r\n\r\n      <datalist id=\"mylist\">\r\n        {allcountryArr.map((country, i) => (\r\n          <option key={i} value={country} />\r\n        ))}\r\n      </datalist>\r\n\r\n      <div style={{ marginTop: \"40px\" }}>\r\n        <input\r\n          style={{\r\n            height: \"50px\",\r\n            width: \"360px\",\r\n            fontSize: \"20px\",\r\n          }}\r\n          placeholder=\"Search...\"\r\n          type=\"search\"\r\n          list=\"mylist\"\r\n          autoFocus\r\n          onChange={(e) => {\r\n            setSearchCountry(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport CovidApp2 from \"./CovidApp2\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CovidApp2 />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}